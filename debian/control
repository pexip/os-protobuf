Source: protobuf
Section: devel
Priority: optional
Maintainer: Pexip AS <packaging@pexip.com>
XSBC-Pexip-Original-Maintainer: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Build-Depends:
# Debian build system
   debhelper-compat (= 13)
 , dh-elpa
# C/C++
 , zlib1g-dev
 , libgmock-dev <!nocheck>
 , libgtest-dev <!nocheck>
# Python
 , dh-sequence-python3 <!nopython>
 , python3-all:any <!nopython>
 , libpython3-all-dev <!nopython>
 , python3-setuptools <!nopython>
 , python3-six <!nopython>
# Manpage generator
 , xmlto
# Tests
 , unzip <!nocheck>
# Ruby
 , rake-compiler <!noruby>
 , gem2deb <!noruby>
# PHP
 , pkg-php-tools (>= 1.7~)
Build-Depends-Indep:
# Java
   ant
 , default-jdk
 , maven-repo-helper
 , libguava-java
 , libgoogle-gson-java
Standards-Version: 4.6.0
Rules-Requires-Root: no
Homepage: https://github.com/google/protobuf/
XS-Ruby-Versions: all
XS-Pexip-Upstream: http://deb.debian.org/debian/ bookworm

Package: ruby-google-protobuf
Architecture: any
Multi-Arch: same
Build-Profiles: <!noruby>
Section: ruby
X-Dhruby-Root: ruby
XB-Ruby-Versions: ${ruby:Versions}
Depends: ruby,
         ${ruby:Depends},
         ${misc:Depends},
         ${shlibs:Depends}
Conflicts: ruby-google-protobuf (<< 3.6.0~)
Replaces: ruby-google-protobuf (<< 3.6.0~)
Description: Protocol Buffers
 Protocol Buffers are Google's data interchange format.
 .
 This library contains the Ruby extension that implements Protocol Buffers
 functionality in Ruby.
 .
 The Ruby extension makes use of generated Ruby code that defines message and
 enum types in a Ruby DSL. You may write definitions in this DSL directly, but
 we recommend using protoc's Ruby generation support with .proto files. The
 build process in this directory only installs the extension; you need to
 install protoc as well to have Ruby code generation functionality.

Package: libprotobuf31
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Breaks: libarcus3 (<< 3.3.0-2), cura-engine (<< 1:3.3.0-2.1+b1)
Description: protocol buffers C++ library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications.

Package: libprotobuf-lite31
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers C++ library (lite version)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for C++ applications whose
 message definitions have the "lite runtime" optimization setting.

Package: libprotobuf-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends}, zlib1g-dev,
 libprotobuf31 (= ${binary:Version}), libprotobuf-lite31 (= ${binary:Version})
Breaks: protobuf-compiler (<< ${binary:Version}), protobuf-compiler (>> ${binary:Version})
Provides: protobuf-api-${pb:API}
Description: protocol buffers C++ library (development files) and proto files
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static libraries needed for
 writing C++ applications. Includes well known proto type files.

Package: libprotoc31
Architecture: any
Multi-Arch: same
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: protocol buffers compiler library
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the runtime library needed for the protocol buffer
 compiler.

Package: libprotoc-dev
Architecture: any
Multi-Arch: same
Section: libdevel
Depends: ${misc:Depends},
 libprotoc31 (= ${binary:Version}), libprotobuf-dev (= ${binary:Version})
Replaces: libprotobuf-dev (<< 2.1.0)
Breaks: libprotobuf-dev (<< 2.1.0)
Description: protocol buffers compiler library (development files)
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the development headers and static library needed for
 writing protobuf compilers.

Package: protobuf-compiler
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends}, libprotoc31 (= ${binary:Version})
Recommends: libprotobuf-dev
Suggests: protobuf-mode-el
Description: compiler for protocol buffer definition files
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the protocol buffer compiler that is used for
 translating from .proto files (containing the definitions) to the language
 binding for the supported languages.

Package: python3-protobuf
Architecture: any
Build-Profiles: <!nopython>
Section: python
Depends: ${shlibs:Depends}, ${python3:Depends}, ${misc:Depends}
Provides: ${python3:Provides}
Description: Python 3 bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the Python 3 bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to Python classes, and then the modules in this package will allow
 you to use those classes in your programs.

Package: libprotobuf-java
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}
Section: java
Description: Java bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the Java bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to Java classes, and then the modules in this package will allow
 you to use those classes in your programs.

Package: elpa-protobuf-mode
Architecture: all
Depends: ${misc:Depends}, ${elpa:Depends}
Section: editors
Description: Emacs addon for editing protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package provides an emacs major mode for editing files in protocol
 buffers format. It features syntax highlighting and auto-indentation.

Package: protobuf-source
Architecture: all
Multi-Arch: foreign
Section: devel
Description: Protocol buffers source code
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the source code needed for building the Python
 GRPCIO-tools package.

Package: php-google-protobuf
Architecture: all
Section: php
Depends: ${misc:Depends}, ${phpcomposer:Debian-require}
Recommends: ${phpcomposer:Debian-recommend}
Suggests: ${phpcomposer:Debian-suggest}
Replaces: ${phpcomposer:Debian-replace}
Breaks: ${phpcomposer:Debian-conflict}, ${phpcomposer:Debian-replace}
Provides: ${phpcomposer:Debian-provide}
Description: PHP bindings for protocol buffers
 Protocol buffers are a flexible, efficient, automated mechanism for
 serializing structured data - similar to XML, but smaller, faster, and
 simpler. You define how you want your data to be structured once, then you can
 use special generated source code to easily write and read your structured
 data to and from a variety of data streams and using a variety of languages.
 You can even update your data structure without breaking deployed programs
 that are compiled against the "old" format.
 .
 Google uses Protocol Buffers for almost all of its internal RPC protocols and
 file formats.
 .
 This package contains the PHP bindings for the protocol buffers. You will
 need the protoc tool (in the protobuf-compiler package) to compile your
 definition to PHP code, and then the modules in this package will allow
 you to use those classes in your programs.
