Description: Remove dependency on javax.annotation library
 It's not yet packaged and not mandatory.
Author: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Forwarded: not-needed
Last-Update: 2022-03-11

---

--- protobuf-3.19.0.orig/java/util/src/main/java/com/google/protobuf/util/FieldMaskUtil.java
+++ protobuf-3.19.0/java/util/src/main/java/com/google/protobuf/util/FieldMaskUtil.java
@@ -46,7 +46,7 @@ import com.google.protobuf.Message;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
-import javax.annotation.Nullable;
+//import javax.annotation.Nullable;
 
 /**
  * Utility helper functions to work with {@link com.google.protobuf.FieldMask}.
@@ -232,7 +232,7 @@ public final class FieldMaskUtil {
   }
 
   /** Checks whether paths in a given fields mask are valid. */
-  public static boolean isValid(@Nullable Descriptor descriptor, String path) {
+  public static boolean isValid(Descriptor descriptor, String path) {
     String[] parts = path.split(FIELD_SEPARATOR_REGEX);
     if (parts.length == 0) {
       return false;
--- protobuf-3.19.0.orig/java/util/src/main/java/com/google/protobuf/util/JsonFormat.java
+++ protobuf-3.19.0/java/util/src/main/java/com/google/protobuf/util/JsonFormat.java
@@ -88,7 +88,7 @@ import java.util.Map;
 import java.util.Set;
 import java.util.TreeMap;
 import java.util.logging.Logger;
-import javax.annotation.Nullable;
+//import javax.annotation.Nullable;
 
 /**
  * Utility class to convert protobuf messages to/from the <a href=
@@ -519,12 +519,10 @@ public class JsonFormat {
      * Find a type by its full name. Returns null if it cannot be found in this {@link
      * TypeRegistry}.
      */
-    @Nullable
     public Descriptor find(String name) {
       return types.get(name);
     }
 
-    @Nullable
     Descriptor getDescriptorForTypeUrl(String typeUrl) throws InvalidProtocolBufferException {
       return find(getTypeName(typeUrl));
     }
@@ -981,7 +979,7 @@ public class JsonFormat {
     }
 
     /** Prints a regular message with an optional type URL. */
-    private void print(MessageOrBuilder message, @Nullable String typeUrl) throws IOException {
+    private void print(MessageOrBuilder message, String typeUrl) throws IOException {
       generator.print("{" + blankOrNewLine);
       generator.indent();
 
@@ -1907,7 +1905,6 @@ public class JsonFormat {
       }
     }
 
-    @Nullable
     private EnumValueDescriptor parseEnum(EnumDescriptor enumDescriptor, JsonElement json)
         throws InvalidProtocolBufferException {
       String value = json.getAsString();
@@ -1937,7 +1934,6 @@ public class JsonFormat {
       return result;
     }
 
-    @Nullable
     private Object parseFieldValue(FieldDescriptor field, JsonElement json, Message.Builder builder)
         throws InvalidProtocolBufferException {
       if (json instanceof JsonNull) {
