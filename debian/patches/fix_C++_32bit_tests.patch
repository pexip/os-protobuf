Description: fix C++ build tests
 Add bits to expect 32 bit systems.
Author: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Bug-Debian: https://bugs.debian.org/1033998
Forwarded: no
Last-Update: 2023-04-07

---

--- protobuf-3.21.12.orig/src/google/protobuf/any_test.cc
+++ protobuf-3.21.12/src/google/protobuf/any_test.cc
@@ -62,9 +62,14 @@ TEST(AnyTest, TestPackAndUnpack) {
 
 TEST(AnyTest, TestPackFromSerializationExceedsSizeLimit) {
   protobuf_unittest::TestAny submessage;
-  submessage.mutable_text()->resize(INT_MAX, 'a');
   protobuf_unittest::TestAny message;
-  EXPECT_FALSE(message.mutable_any_value()->PackFrom(submessage));
+  try {
+    submessage.mutable_text()->resize(INT_MAX, 'a');
+    EXPECT_FALSE(message.mutable_any_value()->PackFrom(submessage));
+  }
+  catch (...) {
+    EXPECT_TRUE(message.mutable_any_value()->PackFrom(submessage));
+  }
 }
 
 TEST(AnyTest, TestUnpackWithTypeMismatch) {
--- protobuf-3.21.12.orig/src/google/protobuf/arena_unittest.cc
+++ protobuf-3.21.12/src/google/protobuf/arena_unittest.cc
@@ -1375,11 +1375,11 @@ TEST(ArenaTest, SpaceAllocated_and_Used)
   options.initial_block_size = arena_block.size();
   Arena arena_2(options);
   EXPECT_EQ(1024, arena_2.SpaceAllocated());
-  EXPECT_EQ(0, arena_2.SpaceUsed());
+  EXPECT_EQ(8 - sizeof(void*), arena_2.SpaceUsed());
   EXPECT_EQ(1024, arena_2.Reset());
   Arena::CreateArray<char>(&arena_2, 55);
   EXPECT_EQ(1024, arena_2.SpaceAllocated());
-  EXPECT_EQ(Align8(55), arena_2.SpaceUsed());
+  EXPECT_EQ(Align8(55) + 8 - sizeof(void*), arena_2.SpaceUsed());
   EXPECT_EQ(1024, arena_2.Reset());
 }
 
@@ -1418,11 +1418,11 @@ TEST(ArenaTest, BlockSizeSmallerThanAllo
 
     *Arena::Create<int64_t>(&arena) = 42;
     EXPECT_GE(arena.SpaceAllocated(), 8);
-    EXPECT_EQ(8, arena.SpaceUsed());
+    EXPECT_EQ(16 - sizeof(void*), arena.SpaceUsed());
 
     *Arena::Create<int64_t>(&arena) = 42;
     EXPECT_GE(arena.SpaceAllocated(), 16);
-    EXPECT_EQ(16, arena.SpaceUsed());
+    EXPECT_EQ(24 - sizeof(void*), arena.SpaceUsed());
   }
 }
 
